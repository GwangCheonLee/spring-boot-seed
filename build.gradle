plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // API Document (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // Dev tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Logging
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // QueryDSL
    implementation'io.github.openfeign.querydsl:querydsl-jpa:6.10.1'
    annotationProcessor'io.github.openfeign.querydsl:querydsl-apt:6.10.1:jpa'
    annotationProcessor'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor'jakarta.annotation:jakarta.annotation-api'

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    testRuntimeOnly 'com.h2database:h2'

    // Development Tools
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Testing Libraries
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

// QueryDSL Settings
def querydslDir = file("src/main/generated")

sourceSets {
    main {
        java {
            srcDirs(querydslDir)
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = querydslDir
}

tasks.named("clean") {
    doLast {
        delete querydslDir
    }
}

// Disable the default plain JAR file generation
tasks.named('jar') {
    enabled = false
}

// Test
test {
    useJUnitPlatform()
}
